C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keilv5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Drive) DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>
   3          #include <Init.h>
   4          #include <Led.h>
   5          #include <Seg.h>
   6          #include <Key.h>
   7          #include <intrins.h>
   8          #include <ds1302.h>
   9          #include <onewire.h>
  10          #include <iic.h>
  11          
  12          
  13          
  14          /* 变量声明区*/
  15          unsigned char Key_Up,Key_Down,Key_Old,Key_Val;
  16          unsigned int Key_Slow_Down,Seg_Slow_Down;
  17          unsigned char Seg_Pos;
  18          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};
  19          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};
  20          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};
  21          unsigned char Rtc[3] = {0x13,0x03,0x05};//时间
  22          unsigned int Timer_1000ms,Timer_3000ms = 0 , Timer_2000ms , Timer_100ms;
  23          unsigned int freq;
  24          float V_Data;//电压采集
  25          unsigned char Sys_Mode = 0;//0-时间 1-回显 2-参数 
  26          unsigned char T_Set=30;//温度参数
  27          float T_Data;
  28          float W_Data;
  29          unsigned char EchoDisp = 0;//0温度 1湿度 2时间
  30          unsigned char MaxT,MaxW;//最大变量
  31          float AverT,AverW;//平均变量
  32          unsigned char Trigger_count,Trigger_time[3];
  33          unsigned char Sys_Mode_Old;//原状态
  34          unsigned char flag;
  35          bit Press_flag,Led_flag,Led_error_flag,Led_L6_flag;
  36          bit Led_Warning;
  37          unsigned char newlight,oldlight;//亮暗检测
  38          
  39          unsigned char NewData[2],OldData[2];
  40          
  41          void Seg_Reset(void)//数码管重置
  42          {
  43   1        unsigned char i;
  44   1        for(i=0;i<8;i++)
  45   1        {
  46   2          Seg_Point[i] = 0;
  47   2          Seg_Buf[i] = 10;
  48   2        }
  49   1      }
  50          
  51          /* 键盘处理函数 */
  52          void Key_Proc()
  53          {
  54   1        if(Key_Slow_Down) return;
C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 2   

  55   1        Key_Slow_Down = 1;
  56   1        
  57   1        Key_Val = Key_Read();
  58   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);
  59   1        Key_Up =~Key_Val & (Key_Old ^ Key_Val);
  60   1        Key_Old = Key_Val;//持续按下
  61   1        
  62   1        if(EchoDisp == 2)//时间回显界面清空
  63   1        {
  64   2          if(Key_Down == 9 )
  65   2            Press_flag = 1;
  66   2          if(Timer_2000ms >=2000 && Key_Up == 9)
  67   2          {
  68   3            unsigned char q = 0;
  69   3            Press_flag = 0;
  70   3            AverT = AverW = MaxT = MaxW;
  71   3            Trigger_count = 0;
  72   3            Timer_2000ms = 0;
  73   3            for(q = 0;q<2;q++)
  74   3              Trigger_time[q]=0;
  75   3          }
  76   2        }
  77   1      
  78   1        
  79   1        switch(Key_Down)
  80   1        {
  81   2          case 4://界面切换
  82   2            if(flag == 0)
  83   2            {
  84   3              Seg_Reset();
  85   3              EchoDisp = 0;
  86   3              if(++Sys_Mode >2) Sys_Mode = 0;
  87   3              Sys_Mode_Old = Sys_Mode;
  88   3            }
  89   2          break;
  90   2          case 5://回显界面
  91   2            if(flag == 0)
  92   2            {
  93   3              if(Sys_Mode == 1)
  94   3              {
  95   4                Seg_Reset();
  96   4                if(++EchoDisp>2) EchoDisp = 0;
  97   4              }
  98   3            }
  99   2          break;
 100   2          case 9:
 101   2            if(flag == 0)
 102   2            {
 103   3              if(Sys_Mode == 2)
 104   3                if(--T_Set==255) T_Set = 99;
 105   3            }
 106   2          break;
 107   2          case 8:
 108   2            if(flag == 0)
 109   2            {
 110   3              if(Sys_Mode == 2)
 111   3                if(++T_Set==100) T_Set = 0;
 112   3            }
 113   2          break;
 114   2          
 115   2        }
 116   1          
C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 3   

 117   1      }
 118          
 119          /* 信息处理函数 */
 120          void Seg_Proc()
 121          {
 122   1        if(Seg_Slow_Down) return;
 123   1        Seg_Slow_Down = 1;
 124   1        
 125   1        /* 信息读取函数 */
 126   1        Read_Rtc(Rtc);//获取时钟
 127   1        
 128   1        oldlight = newlight;
 129   1        newlight = Ad_Read(0x41) /51.0;
 130   1        
 131   1        T_Data = Read_T();//获取温度
 132   1        
 133   1        if(T_Data<0)//温度合法判断
 134   1          T_Data = 0;
 135   1        else if (T_Data>99)
 136   1          T_Data = 99;
 137   1        
 138   1        /* 数据处理函数 */
 139   1        if(freq<200 || freq>2000) //湿度处理
 140   1          W_Data = 0;
 141   1        else
 142   1          W_Data = (freq-200) * 2/45 +10;
 143   1        
 144   1        if((oldlight>2.5) && (newlight<2.5) && (flag ==0))//亮暗变化
 145   1        {
 146   2          NewData[0] = T_Data;
 147   2          NewData[1] = W_Data;
 148   2          if(Trigger_count >= 2)
 149   2          {
 150   3            if((NewData[0]>OldData[0]) && (NewData[1]>OldData[1]))
 151   3              Led_L6_flag = 1;
 152   3            else
 153   3              Led_L6_flag = 0;
 154   3          }
 155   2          OldData[0] = NewData[0];
 156   2          OldData[1] = NewData[1];
 157   2          
 158   2          if(W_Data == 0)
 159   2          {
 160   3          }
 161   2          else if(++Trigger_count==100)//数据合法时count++
 162   2              Trigger_count = 99;   
 163   2          flag = 1;
 164   2          Read_Rtc(Trigger_time); //数据合法时读时间
 165   2        }
 166   1        else if (flag == 1 && Timer_3000ms>=3000)
 167   1          flag = 0;
 168   1        
 169   1      
 170   1        if(flag)//如果触发
 171   1        {
 172   2          Seg_Buf[0] = 18;
 173   2          Seg_Buf[1] = 10;
 174   2          Seg_Buf[2] = 10;
 175   2          Seg_Buf[3] = (unsigned char) T_Data / 10 % 10;
 176   2          Seg_Buf[4] = (unsigned char) T_Data%10;
 177   2          Seg_Buf[5] = 11;
 178   2          if(W_Data == 0)//数据不合法
C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 4   

 179   2          {
 180   3            Led_error_flag = 0;
 181   3            Seg_Buf[6] = 14;
 182   3            Seg_Buf[7] = 14;
 183   3          }
 184   2          else//数据合法
 185   2          {
 186   3            Led_error_flag = 1;
 187   3            Seg_Buf[6] = (unsigned char) W_Data/10%10;
 188   3            Seg_Buf[7] = (unsigned char) W_Data%10;
 189   3      
 190   3            if(T_Data > T_Set)//用于Led合法时亮暗辅助
 191   3              Led_flag = 1;
 192   3            else
 193   3              Led_flag = 0;
 194   3                
 195   3            MaxT = (T_Data>MaxT)?T_Data:MaxT;
 196   3            MaxW = (W_Data>MaxW)?W_Data:MaxW;
 197   3            AverW = (AverW * (Trigger_count -1 )+W_Data)/Trigger_count;
 198   3            AverT = (AverT * (Trigger_count -1 )+T_Data)/Trigger_count;
 199   3          }
 200   2          Seg_Point[6] = 0;
 201   2        }
 202   1        else
 203   1        {
 204   2          switch(Sys_Mode)
 205   2          {
 206   3            case 0://时间界面
 207   3              Seg_Buf[0] = Rtc[0] /16%16;
 208   3              Seg_Buf[1] = Rtc[0]  %16;
 209   3              Seg_Buf[2] = 11;
 210   3              Seg_Buf[3] = Rtc[1] /16 %16;
 211   3              Seg_Buf[4] = Rtc[1] %16;
 212   3              Seg_Buf[5] = 11;
 213   3              Seg_Buf[6] = Rtc[2] /16%16;
 214   3              Seg_Buf[7] = Rtc[2] %16;
 215   3              Seg_Point[6] = 0;
 216   3      
 217   3            break;
 218   3            case 1://回显界面
 219   3              if(Sys_Mode == 1)
 220   3              {
 221   4                if(EchoDisp == 0)//温度回显
 222   4                {
 223   5                  Seg_Reset();
 224   5                  Seg_Buf[0] = 15;
 225   5                  if(Trigger_count != 0)
 226   5                  {
 227   6                    Seg_Buf[1] = 10;
 228   6                    Seg_Buf[2] = MaxT/10%10;
 229   6                    Seg_Buf[3] = MaxT%10;
 230   6                    Seg_Buf[4] = 11;
 231   6                    Seg_Buf[5] = (unsigned char)AverT/10%10;
 232   6                    Seg_Buf[6] = (unsigned char)AverT%10;
 233   6                    Seg_Buf[7] = (unsigned char)(AverT*10)%10;
 234   6                    Seg_Point[6] = 1;             
 235   6                  }
 236   5                }
 237   4                
 238   4                if(EchoDisp == 1)//湿度回显
 239   4                {
 240   5                  Seg_Reset();
C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 5   

 241   5                  Seg_Buf[0] = 16;
 242   5                  if(Trigger_count != 0)
 243   5                  {
 244   6                    Seg_Buf[1] = 10;
 245   6                    Seg_Buf[2] = MaxW/10%10;
 246   6                    Seg_Buf[3] = MaxW%10;
 247   6                    Seg_Buf[4] = 11;
 248   6                    Seg_Buf[5] = (unsigned char)AverW/10%10;
 249   6                    Seg_Buf[6] = (unsigned char)AverW%10;
 250   6                    Seg_Buf[7] = (unsigned char)(AverW*10)%10;  
 251   6                    Seg_Point[6] = 1;
 252   6                  }
 253   5                }
 254   4                  
 255   4                if(EchoDisp == 2)//时间回显
 256   4                {
 257   5                  Seg_Reset();
 258   5                  Seg_Point[6] = 0;
 259   5                  Seg_Buf[0] = 17;
 260   5                  Seg_Buf[1] = Trigger_count /10 %10;
 261   5                  Seg_Buf[2] = Trigger_count%10;
 262   5                  if(Trigger_count !=0)
 263   5                  {
 264   6                    Seg_Buf[3] = Trigger_time[0]/16%16;
 265   6                    Seg_Buf[4] = Trigger_time[0]%16;
 266   6                    Seg_Buf[5] = 11;
 267   6                    Seg_Buf[6] = Trigger_time[1]/16%16;
 268   6                    Seg_Buf[7] = Trigger_time[1]%16;
 269   6                  }           
 270   5                }
 271   4              }
 272   3            break;
 273   3            case 2://参数设置
 274   3              Seg_Buf[0] = 12;
 275   3              Seg_Buf[1] = 10;
 276   3              Seg_Buf[2] = 10;
 277   3              Seg_Buf[3] = 10;
 278   3              Seg_Buf[4] = 10;
 279   3              Seg_Buf[5] = 10;
 280   3              Seg_Buf[6] = T_Set/10%10;
 281   3              Seg_Buf[7] = T_Set%10;
 282   3              Seg_Point[6] = 0;
 283   3            break;    
 284   3          }
 285   2        }
 286   1        
 287   1      }
 288          
 289          /* 其他显示函数*/
 290          void Led_Proc()
 291          {
 292   1      
 293   1        ucLed[0] = (Sys_Mode == 0);
 294   1        ucLed[1] = (Sys_Mode == 1);
 295   1        ucLed[2] = (Sys_Mode == 2);
 296   1        ucLed[3] = (Led_flag)?Led_Warning:0;
 297   1        ucLed[4] = Led_error_flag?1:0;
 298   1        ucLed[5] = Led_L6_flag?1:0; 
 299   1      }
 300          
 301          /* 中断服务函数 */
 302          void Timer1_Server() interrupt 3
C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 6   

 303          {
 304   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;
 305   1        if(++Seg_Slow_Down == 20) Seg_Slow_Down = 0;
 306   1        if(++Seg_Pos == 8) Seg_Pos = 0;
 307   1        Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 308   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 309   1        
 310   1        if(flag)//用于亮暗切换
 311   1        {
 312   2          if(++Timer_3000ms >=3000)
 313   2            Timer_3000ms =3001;
 314   2        }
 315   1        else
 316   1          Timer_3000ms = 0;
 317   1        
 318   1        if(Press_flag == 1)//用于长按
 319   1        {
 320   2          if(++Timer_2000ms >2000)
 321   2            Timer_2000ms = 2001;
 322   2        }
 323   1        else
 324   1          Timer_2000ms = 0;
 325   1        
 326   1        if(Led_flag)
 327   1        {   
 328   2          if(++Timer_100ms >= 100)//用于灯闪烁
 329   2          {
 330   3            Timer_100ms = 0;
 331   3            Led_Warning ^= 1; 
 332   3          }
 333   2        }
 334   1        
 335   1        if(++Timer_1000ms == 1000)// 获取频率
 336   1        {
 337   2          Timer_1000ms = 0;
 338   2          freq = TH0 << 8 | TL0;
 339   2          TH0 = TL0 = 0;
 340   2        }
 341   1      }
 342          
 343          
 344          /* 定时器1初始化函数 */
 345          void Timer1_Init(void)    //1毫秒@12.000MHz
 346          {
 347   1        AUXR &= 0xBF;     //定时器时钟12T模式
 348   1        TMOD &= 0x0F;     //设置定时器模式
 349   1        TL1 = 0x18;       //设置定时初始值
 350   1        TH1 = 0xFC;       //设置定时初始值
 351   1        TF1 = 0;        //清除TF0标志
 352   1        TR1 = 1;        //定时器0开始计时
 353   1        ET1 = 1;        //中断定时器0打开
 354   1        EA = 1;         //总中断打开
 355   1      }
 356          
 357          /*计数器初始化函数*/
 358          void Timer0_Init(void)    //1毫秒@12.000MHz
 359          {
 360   1        AUXR &= 0x7F;     //定时器时钟12T模式
 361   1        TMOD &= 0xF0;     //设置定时器模式
 362   1        TMOD |= 0x05;       //设置定时器0，技术模式
 363   1        TL0 = 0x00;       //设置定时初始值
 364   1        TH0 = 0x00;       //设置定时初始值
C51 COMPILER V9.56.0.0   MAIN                                                              03/23/2025 00:56:49 PAGE 7   

 365   1        TF0 = 0;        //清除TF0标志
 366   1        TR0 = 1;        //定时器0开始计时
 367   1      }
 368          
 369          void Delay750ms(void) //@12.000MHz
 370          {
 371   1        unsigned char data i, j, k;
 372   1      
 373   1        _nop_();
 374   1        _nop_();
 375   1        i = 35;
 376   1        j = 51;
 377   1        k = 182;
 378   1        do
 379   1        {
 380   2          do
 381   2          {
 382   3            while (--k);
 383   3          } while (--j);
 384   2        } while (--i);
 385   1      }
 386          
 387          
 388          /* Main */
 389          void main()
 390          {
 391   1        System_Init();//系统初始化（关闭灯，蜂鸣器）
 392   1        Timer1_Init();//定时器初始化
 393   1        Timer0_Init();
 394   1        Set_Rtc(Rtc);//设置时间
 395   1        Delay750ms();
 396   1        Read_T();
 397   1        
 398   1        
 399   1        while(1)
 400   1        {
 401   2          Seg_Proc();
 402   2          Key_Proc();
 403   2          Led_Proc();   
 404   2        }
 405   1      }
 406          
 407          
 408          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1830    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     83       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
