C51 COMPILER V9.56.0.0   MAIN                                                              04/10/2025 01:51:46 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keilv5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <Init.h>
   3          #include <Key.h>
   4          #include <Seg.h>
   5          #include <Led.h>
   6          #include <iic.h>
   7          
   8          unsigned char Key_SlowDown;
   9          unsigned int Seg_SlowDown;
  10          
  11          unsigned char Key_Val,Key_Down,Key_Up,Key_Old;
  12          
  13          unsigned char Seg_Pos;
  14          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};
  15          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};
  16          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0,};
  17          
  18          unsigned char Sys_Mode;//1湿度 2参数 3时间
  19          bit Change_Mode = 0;//0停止 1启动
  20          
  21          float V_Data;
  22          unsigned char W_Data;
  23          unsigned char canshu = 50;
  24          unsigned char time = 3;
  25          unsigned int Timer_time;
  26          unsigned int Timer_Trigger;
  27          bit Trigger;
  28          unsigned char temp;
  29          void Seg_Reset()
  30          {
  31   1        unsigned char i;
  32   1        for(i = 0;i<8 ;i++)
  33   1        {
  34   2          Seg_Buf[i] = 10;
  35   2          Seg_Point[i] = 0;
  36   2        }
  37   1      }
  38          
  39          void Key_Proc()
  40          {
  41   1        if(Key_SlowDown < 10) return;
  42   1        Key_SlowDown = 0; 
  43   1        
  44   1        Key_Val = Key_Read();
  45   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);
  46   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
  47   1        Key_Old = Key_Val;
  48   1        
  49   1        Timer_time = time * 1000;
  50   1        
  51   1        switch(Key_Down)
  52   1        {
  53   2          case 4:
  54   2            Seg_Reset();
C51 COMPILER V9.56.0.0   MAIN                                                              04/10/2025 01:51:46 PAGE 2   

  55   2            if(++Sys_Mode > 2) Sys_Mode = 0;
  56   2          break;
  57   2          case 8:
  58   2            if(Sys_Mode == 1)
  59   2            {
  60   3              canshu = canshu - 5;
  61   3              if(canshu < 30)
  62   3                  canshu = 90;
  63   3            }
  64   2            else if (Sys_Mode == 2)
  65   2            {
  66   3              time = time - 1;
  67   3              if(time <1)
  68   3                time = 10;
  69   3      
  70   3            }
  71   2                
  72   2          break;
  73   2          case 9:
  74   2            if(Sys_Mode == 1)
  75   2            {
  76   3              canshu = canshu + 5;
  77   3              if(canshu > 90)
  78   3                  canshu = 30;
  79   3            }
  80   2            else if (Sys_Mode == 2)
  81   2            {
  82   3              time = time + 1;
  83   3              if(time >10)
  84   3                time = 1;
  85   3            }   
  86   2            
  87   2          break;
  88   2          case 5:
  89   2            Change_Mode ^= 1;
  90   2            if(Sys_Mode == 2)
  91   2              warn = 0;
*** ERROR C202 IN LINE 91 OF main.c: 'warn': undefined identifier
  92   2          break;
  93   2        }
  94   1      }
  95          
  96          void Seg_Proc()
  97          {
  98   1      
  99   1        if(Seg_SlowDown < 300) return;
 100   1        Seg_SlowDown = 0;
 101   1        
 102   1        switch(Sys_Mode)
 103   1        {
 104   2          case 0:
 105   2            Seg_Buf[0] = 11;
 106   2            if(W_Data < 10)
 107   2            {
 108   3              Seg_Buf[6] = 10;
 109   3              Seg_Buf[7] = W_Data;
 110   3            }
 111   2            else
 112   2            {
 113   3              Seg_Buf[6] = W_Data / 10 % 10 ;
 114   3              Seg_Buf[7] = W_Data  % 10 ;
 115   3            }
C51 COMPILER V9.56.0.0   MAIN                                                              04/10/2025 01:51:46 PAGE 3   

 116   2          break;
 117   2          case 1:
 118   2            Seg_Buf[0] = 12;
 119   2            if(canshu < 10)
 120   2            {
 121   3              Seg_Buf[6] = 10;
 122   3              Seg_Buf[7] = canshu;
 123   3            }
 124   2            else
 125   2            {
 126   3              Seg_Buf[6] = canshu / 10 % 10 ;
 127   3              Seg_Buf[7] = canshu  % 10 ;
 128   3            }   
 129   2          break;    
 130   2          case 2:
 131   2            Seg_Buf[0] = 13;
 132   2            if(time < 10)
 133   2            {
 134   3              Seg_Buf[6] = 10;
 135   3              Seg_Buf[7] = time;
 136   3            }
 137   2            else
 138   2            {
 139   3              Seg_Buf[6] = time / 10 % 10 ;
 140   3              Seg_Buf[7] = time  % 10 ;
 141   3            }     
 142   2            break;
 143   2        }
 144   1        
 145   1        if(Change_Mode)
 146   1        {
 147   2      
 148   2          if(W_Data < canshu )
 149   2          {
 150   3            Trigger = 1;
 151   3            P0 = 0x10;//蜂鸣器和继电器
 152   3            temp = (P2 & 0x1f) | 0xa0;
 153   3            P2 = temp;
 154   3            temp = P2 & 0x1f;
 155   3            P2 = temp;
 156   3          }
 157   2        }
 158   1        else
 159   1        {
 160   2          P0 = 0x00;//蜂鸣器和继电器
 161   2          temp = (P2 & 0x1f) | 0xa0;
 162   2          P2 = temp;
 163   2          temp = P2 & 0x1f;
 164   2          P2 = temp;
 165   2        }
 166   1        
 167   1        V_Data = Ad_Read(0x03) / 51.0;
 168   1        if(V_Data <= 1) W_Data = 10;
 169   1        else if (V_Data >= 4) W_Data = 90;
 170   1        else W_Data = 10 + ((80 / 3) * (V_Data - 1));
 171   1        
 172   1      
 173   1      }
 174          
 175          void Led_Proc()
 176          {
 177   1      
C51 COMPILER V9.56.0.0   MAIN                                                              04/10/2025 01:51:46 PAGE 4   

 178   1        ucLed[0] = (Sys_Mode == 0)? 1 : 0;
 179   1        ucLed[1] = (Sys_Mode == 1)? 1 : 0;
 180   1        ucLed[2] = (Sys_Mode == 2)? 1 : 0;
 181   1        ucLed[7] = Change_Mode == 0 ? 0 : 1;  
 182   1      }
 183          
 184          void Timer0_Isr(void) interrupt 1
 185          {
 186   1        Key_SlowDown++;
 187   1        Seg_SlowDown++;
 188   1        
 189   1        if(++Seg_Pos == 8) Seg_Pos = 0;
 190   1        Seg_Disp(Seg_Buf[Seg_Pos],Seg_Pos,Seg_Point[Seg_Pos]);
 191   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 192   1        
 193   1        if(Trigger == 1)
 194   1        {
 195   2          if(++Timer_Trigger == Timer_time)
 196   2          {
 197   3            Timer_Trigger = 0;
 198   3      //      Trigger = 0;
 199   3            P0 = 0x00;//蜂鸣器和继电器
 200   3            temp = (P2 & 0x1f) | 0xa0;
 201   3            P2 = temp;
 202   3            temp = P2 & 0x1f;
 203   3            P2 = temp;
 204   3          }
 205   2        }
 206   1      }
 207          
 208          void Timer0_Init(void)    //1毫秒@12.000MHz
 209          {
 210   1        AUXR &= 0x7F;     //定时器时钟12T模式
 211   1        TMOD &= 0xF0;     //设置定时器模式
 212   1        TL0 = 0x18;       //设置定时初始值
 213   1        TH0 = 0xFC;       //设置定时初始值
 214   1        TF0 = 0;        //清除TF0标志
 215   1        TR0 = 1;        //定时器0开始计时
 216   1        ET0 = 1;        //使能定时器0中断
 217   1        EA = 1;
 218   1      }
 219          
 220          void main ()
 221          {
 222   1        Sys_Init();
 223   1        Timer0_Init();
 224   1        while(1)
 225   1        {
 226   2          Seg_Proc();
 227   2          Key_Proc();
 228   2          Led_Proc();
 229   2        }
 230   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
