C51 COMPILER V9.56.0.0   MAIN                                                              03/22/2025 02:14:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keilv5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Drive) DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <Init.h>
   3          #include <Led.h>
   4          #include <Seg.h>
   5          #include <Key.h>
   6          #include <intrins.h>
   7          #include <ds1302.h>
   8          #include <onewire.h>
   9          #include <iic.h>
  10          #include <STC15F2K60S2.H>
  11          
  12          
  13          /* 变量声明区*/
  14          unsigned char Key_Up,Key_Down,Key_Old,Key_Val;
  15          unsigned int Key_Slow_Down,Seg_Slow_Down;
  16          unsigned char Seg_Pos;
  17          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};
  18          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};
  19          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};
  20          unsigned char Rtc[3] = {0x23,0x59,0x55};
  21          bit Sys_Disp_Mode; //0代表电压显示 1代表电压输出
  22          float V_Data;//电压数据
  23          float V_Data_Output;
  24          bit Output_Mode = 0;
  25          bit Seg_Flag = 1;
  26          
  27          /* 键盘处理函数 */
  28          void Key_Proc()
  29          {
  30   1        if(Key_Slow_Down) return;
  31   1        Key_Slow_Down = 1;
  32   1        
  33   1        Key_Val = Key_Read();
  34   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);
  35   1        Key_Up =~Key_Val & (Key_Old ^ Key_Val);
  36   1        Key_Old = Key_Val;
  37   1        
  38   1        switch(Key_Down)
  39   1        {
  40   2          case 19:
  41   2            Sys_Disp_Mode ^= 1;
  42   2          break;
  43   2          case 18:
  44   2            Output_Mode ^= 1;
  45   2          break;
  46   2          case 17:
  47   2            Seg_Flag ^= 1;
  48   2          break;
  49   2        }
  50   1      }
  51          
  52          /* 信息处理函数 */
  53          void Seg_Proc()
  54          {
C51 COMPILER V9.56.0.0   MAIN                                                              03/22/2025 02:14:33 PAGE 2   

  55   1        if(Seg_Slow_Down) return;
  56   1        Seg_Slow_Down = 1;
  57   1        
  58   1        if(Sys_Disp_Mode == 1)
  59   1        {
  60   2          if(Output_Mode == 0)
  61   2            V_Data_Output = 2;
  62   2          else
  63   2            V_Data_Output = V_Data;
  64   2        }
  65   1        
  66   1        if(Sys_Disp_Mode == 0)
  67   1        {
  68   2          Seg_Buf[0] = 12;
  69   2          Seg_Buf[1] = 10;
  70   2          Seg_Buf[2] = 10;
  71   2          Seg_Buf[3] = 10;
  72   2          Seg_Buf[4] = 10;
  73   2          Seg_Buf[5] = (unsigned char)V_Data%10;
  74   2          Seg_Buf[6] = (unsigned int)(V_Data*100)/10%10;
  75   2          Seg_Buf[7] = (unsigned int)(V_Data*100)%10;
  76   2          Seg_Point[5] = 1;
  77   2        }
  78   1        else
  79   1        {
  80   2          Seg_Buf[0] = 13;
  81   2          Seg_Buf[1] = 10;
  82   2          Seg_Buf[2] = 10;
  83   2          Seg_Buf[3] = 10;
  84   2          Seg_Buf[4] = 10;
  85   2          Seg_Buf[5] = (unsigned char)V_Data_Output%10;
  86   2          Seg_Buf[6] = (unsigned int)(V_Data_Output*100)/10%10;
  87   2          Seg_Buf[7] = (unsigned int)(V_Data_Output*100)%10;
  88   2          Seg_Point[5] = 1;
  89   2        }
  90   1        
  91   1        
  92   1        /* 信息读取函数 */
  93   1        V_Data = Ad_Read(0x41) / 51.0;
  94   1        Da_Write(V_Data_Output*51.0);
  95   1        /* 数据处理函数 */
  96   1      
  97   1      }
  98          /* 其他显示函数*/
  99          void Led_Proc()
 100          {
 101   1        unsigned char i;
 102   1        for(i=0;i<2;i++)
 103   1          ucLed[i] = (i == Sys_Disp_Mode);
 104   1        
 105   1        if(V_Data<1.5 || (V_Data >= 2.5 && V_Data < 3.5))
 106   1          ucLed[2] = 0;
 107   1        else
 108   1          ucLed[2] = 1; 
 109   1        
 110   1        if(Output_Mode == 0)
 111   1          ucLed[3] = 1;
 112   1        else
 113   1          ucLed[3] = 0;
 114   1      }
 115          
 116          /* 中断服务函数 */
C51 COMPILER V9.56.0.0   MAIN                                                              03/22/2025 02:14:33 PAGE 3   

 117          void Timer0_Server() interrupt 1
 118          {
 119   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;
 120   1        if(++Seg_Slow_Down == 100) Seg_Slow_Down = 0;
 121   1        if(++Seg_Pos == 8) Seg_Pos = 0;
 122   1        if(Seg_Flag)
 123   1          Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 124   1        else
 125   1          Seg_Disp(Seg_Pos,10,0);
 126   1        
 127   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 128   1      }
 129          
 130          
 131          /* 定时器初始化函数 */
 132          void Timer0_Init(void)    //1毫秒@12.000MHz
 133          {
 134   1        AUXR &= 0x7F;     //定时器时钟12T模式
 135   1        TMOD &= 0xF0;     //设置定时器模式
 136   1        TL0 = 0x18;       //设置定时初始值
 137   1        TH0 = 0xFC;       //设置定时初始值
 138   1        TF0 = 0;        //清除TF0标志
 139   1        TR0 = 1;        //定时器0开始计时
 140   1        ET0 = 1;        //中断定时器0打开
 141   1        EA = 1;         //总中断打开
 142   1      }
 143          
 144          
 145          /* Main */
 146          void main()
 147          {
 148   1        System_Init();
 149   1        Timer0_Init();
 150   1        Set_Rtc(Rtc);
 151   1        
 152   1        while(1)
 153   1        {
 154   2          Seg_Proc();
 155   2          Key_Proc();
 156   2          Led_Proc();   
 157   2        }
 158   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    610    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
